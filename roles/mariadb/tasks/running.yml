---
- name: (running) Migrate any legacy directories
  shell:
    cmd: "mv /srv/{{ ourcompose_mariadb_storage }}/database_{{ item }} /srv/{{ ourcompose_mariadb_storage }}/mariadb_{{ item }}"
  loop:
    - 'mysql'
    - 'conf.d'
  # We're just brute-forcing the move here. stable-5.X this entire task can be removed
  failed_when: False

- name: (running) Determine whether the mariadb service is existing yet
  shell:
    cmd: docker ps -a | tr -s ' ' | rev | cut -d ' ' -f 1 | rev | grep mariadb
  failed_when: False
  register: ourcompose_mariadb_existing

- name: (running) The latest mariadb service is {% if not ourcompose_mariadb_existing['rc'] %}re{% endif %}started
  docker_compose:
    project_name: mariadb
    definition:
      version: '3.6'
      services:
          mariadb:
              image: "mariadb:{{ ourcompose_mariadb_version }}"
              container_name: mariadb
              restart: always
              volumes:
                  - "/srv/{{ ourcompose_mariadb_storage }}/mariadb_mysql:/var/lib/mysql"
                  - "/srv/{{ ourcompose_mariadb_storage }}/mariadb_conf.d:/etc/mysql/conf.d"
              networks:
                  - backend
              environment:
                  MYSQL_ROOT_PASSWORD: "{{ ourcompose_mariadb_root_password }}"
              healthcheck:
                test: "{{ ourcompose_mariadb_healthcheck }}"
                interval: 5s
                timeout: 30s
                retries: 3
      networks:
          backend:
              name: backend
    pull: yes
    state: present
    # If the container is not already present, we don't want to pass
    # the 'restarted' parameter, we just want it restarted regularly.
    restarted: "{{ not ourcompose_mariadb_existing['rc'] and ourcompose_mariadb_restarted }}"
    timeout: 200
  register: ourcompose_backend_output
  no_log: "{{ ourcompose_common_no_log }}"

- name: Set mariadb_root_password for the rest of the playbook
  set_fact:
    ourcompose_mariadb_root_password: "{{ ourcompose_mariadb_root_password }}"
  no_log: "{{ ourcompose_common_no_log }}"

- name: (running) The mariadb database service is up and initialized
  # We're running a while loop to check to ensure that the mariadb database has
  # initialized:
  #   https://stackoverflow.com/questions/25503412/how-do-i-know-when-my-docker-mysql-container-is-up-and-mysql-is-ready-for-taking
  shell: 'docker exec -i mariadb bash -c "while mysql -uroot -p{{ ourcompose_mariadb_root_password }} -e \"SHOW DATABASES;\" 2>&1 | grep -e \"ERROR 2002\|ERROR 1045\"; do sleep 1; done; echo \"SHOW DATABASES SUCCEEDED\""'
  no_log: "{{ ourcompose_common_no_log }}"

