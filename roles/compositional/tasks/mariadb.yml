---
- name: (mariadb) Determine whether the mariadb service is existing yet
  shell:
    cmd: docker ps -a | tr -s ' ' | rev | cut -d ' ' -f 1 | rev | grep mariadb
  failed_when: False
  register: compositional_mariadb_existing

- name: (mariadb) The latest mariadb service is built and present
  docker_compose:
    project_name: mariadb
    timeout: 60
    definition:
      version: '3.6'
      services:
          mariadb:
              image: "mariadb:{{ compositional_mariadb_version }}"
              container_name: database
              restart: always
              volumes:
                  - "/srv/{{ compositional_mariadb_storage }}/database_mysql:/var/lib/mysql"
                  - "/srv/{{ compositional_mariadb_storage }}/database_conf.d:/etc/mysql/conf.d"
              networks:
                  - backend
              environment:
                  MYSQL_ROOT_PASSWORD: "{{ compositional_database_root_password }}"
              healthcheck:
                test: "{{ compositional_mariadb_healthcheck }}"
                interval: 5s
                timeout: 30s
                retries: 3
      networks:
          backend:
              name: backend
    pull: "{{ compositional_mariadb_pull }}"
    state: "{{ compositional_mariadb_state }}"
    # If the container is not already present, we don't want to pass
    # the 'restarted' parameter, we just want it restarted regularly.
    restarted: "{{ not compositional_mariadb_existing['rc'] }}"
    timeout: 200
  register: compositional_backend_output
  no_log: "{{ compositional_no_log }}"

- name: (mariadb) Set Backend Type
  set_fact:
    compositional_backend_type: 'mysql'
    compositional_backend_port: '3306'
