---
- name: (present) Nginx conf is deployed
  template:
    src: "nginx_jekyll.conf.j2"
    dest: "/srv/{{ ourcompose_nginx_storage }}/nginx_conf.d/{{ ourcompose_common_domain }}/jekyll.conf"

- name: (present) The jekyll data dir is created
  file:
    path: "/srv/{{ ourcompose_jekyll_storage }}/jekyll_jekyll/"
    state: directory
    owner: 1000
    group: 1000
    recurse: True

- name: (present) The entrypoint.sh script is deployed
  copy:
    src: '../files/jekyll_entrypoint.sh'
    dest: '/srv/{{ ourcompose_jekyll_storage }}/jekyll_jekyll/entrypoint.sh'
    mode: '0555'

- name: (present) Determine whether the jekyll service is existing yet
  shell:
    cmd: docker ps -a | tr -s ' ' | rev | cut -d ' ' -f 1 | rev | grep jekyll
  failed_when: False
  register: ourcompose_jekyll_existing

- name: (present) The latest jekyll service is built and {{ ourcompose_jekyll_state }}
  docker_compose:
    project_name: jekyll
    definition:
      version: '3.6'
      services:
          jekyll:
              image: "jekyll/jekyll:{{ ourcompose_jekyll_version }}"
              container_name: 'jekyll'
              command: "/srv/jekyll/entrypoint.sh"
              restart: always
              volumes:
                - "/srv/{{ ourcompose_jekyll_storage }}/jekyll_jekyll:/srv/jekyll"

              networks:
                  - frontend

              environment:
                JEKYLL_GIT_URL: "{{ ourcompose_jekyll_git_url }}"
                JEKYLL_GIT_BRANCH: "{{ ourcompose_jekyll_git_branch }}"
                JEKYLL_DOMAIN: "{{ ourcompose_common_domain }}"
                JEKYLL_BASE_URL: "/jekyll/"
                JEKYLL_PORT: "{{ ourcompose_jekyll_port }}"
                JEKYLL_EXTRA_COMMANDS: "{{ ourcompose_jekyll_extra_commands }}"
                JEKYLL_ENV: 'production'

              healthcheck:
                test: "{{ ourcompose_jekyll_healthcheck }}"
                interval: 5s
                timeout: 30s
                retries: 3

      networks:
          frontend:
              external: true
    pull: "{{ ourcompose_jekyll_pull }}"
    state: "{{ ourcompose_jekyll_state }}"
    # If the container is not already present, we don't want to pass
    # the 'restarted' parameter, we just want it restarted regularly.
    restarted: "{{ not ourcompose_jekyll_existing['rc'] }}"
    timeout: 200
  register: ourcompose_jekyll_output

- name: (present) Wait for jekyll to build the site and start up the server
  shell: docker logs --since 6m jekyll | grep 'Server running...'
  register: ourcompose_jekyll_server_running
  until: ourcompose_jekyll_server_running['rc'] == 0
  retries: 72
  delay: 5

- name: (present) Set up the bind mountpoints
  ansible.builtin.import_role:
    name: compositionalenterprises.ourcompose.bind_mountpoints
  vars:
    ourcompose_bind_mountpoints_mountpoints: "{{ ourcompose_jekyll_bind_mountpoints }}"
    ourcompose_bind_mountpoints_container: 'jekyll'

