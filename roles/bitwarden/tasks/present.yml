---
- name: (present) Nginx conf is deployed
  template:
    src: "nginx_bitwarden.conf.j2"
    dest: "/srv/{{ ourcompose_nginx_storage }}/nginx_conf.d/{{ ourcompose_common_domain }}/bitwarden.conf"

- name: (present) Determine whether the bitwarden service is existing yet
  shell:
    cmd: docker ps -a | tr -s ' ' | rev | cut -d ' ' -f 1 | rev | grep bitwarden
  failed_when: False
  register: ourcompose_bitwarden_existing

- name: (present) The latest bitwarden service is built and {{ ourcompose_bitwarden_state }}
  docker_compose:
    project_name: bitwarden
    definition:
      version: '3.6'
      services:
          bitwarden:
              image: "vaultwarden/server:{{ ourcompose_bitwarden_version }}"
              container_name: bitwarden
              restart: always
              volumes:
                  - "/srv/{{ ourcompose_bitwarden_storage}}/bitwarden_data:/data/"

              networks:
                  - frontend

              environment:
                ADMIN_TOKEN: "{{ ourcompose_bitwarden_admin_token }}"
                DOMAIN: "https://{{ ourcompose_common_domain }}/bitwarden/"
                LOG_LEVEL: "debug"

              healthcheck:
                test: "{{ ourcompose_bitwarden_healthcheck }}"
                interval: 5s
                timeout: 30s
                retries: 3

      networks:
          frontend:
              external: true

    pull: "{{ ourcompose_bitwarden_pull }}"
    state: "{{ ourcompose_bitwarden_state }}"
    # If the container is not already present, we don't want to pass
    # the 'restarted' parameter, we just want it restarted regularly.
    restarted: "{{ not ourcompose_bitwarden_existing['rc'] }}"
    timeout: 200
  register: ourcompose_bitwarden_output

- name: (present) Set up the bind mountpoints
  ansible.builtin.import_role:
    name: compositionalenterprises.ourcompose.bind_mountpoints
  vars:
    ourcompose_bind_mountpoints_mountpoints: "{{ ourcompose_bitwarden_bind_mountpoints }}"
    ourcompose_bind_mountpoints_container: 'bitwarden'

#
# Admin Password
#
- name: (present) Bitwarden is healthy
  shell: docker exec -i bitwarden bash -c "curl -sSL --fail localhost/bitwarden"
  register: ourcompose_bitwarden_health
  until: ourcompose_bitwarden_health['rc'] == 0
  retries: 24
  delay: 5

- name: (present) Get the registration parameters
  script:
    cmd: "../files/bitwarden_registration_params.py
            -n Admin
            -e admin@{{ ourcompose_common_domain }}
            -p {{ ourcompose_bitwarden_admin_password }}
         "
  delegate_to: localhost
  become: False
  register: ourcompose_bitwarden_registration_params_result

- name: Write out the command to a local file
  #
  # We do this because we know that there will always be a pipe in the 'key' key of the
  # params result. This causes sh/bash to trip up and think we're trying to pipe to another
  # command. We can't get around this by escaping, because that causes the data to be malformed
  # and we can't escape it using single quotes because that's just not how things work
  # apparently. I kept getting `sh: 1: Syntax error: Unterminated quoted string` for some damn
  # reason. So here, we write the command out to a file, run it, and then delete the file.
  #
  copy:
    dest: "/srv/{{ ourcompose_bitwarden_storage}}/bitwarden_data/admin_registration_command.sh"
    content: |
      #!/bin/bash
      curl --header 'Content-Type: application/json' --request POST --data '{{ ourcompose_bitwarden_registration_params_result['stdout'].strip() }}' http://localhost/bitwarden/api/accounts/register
    mode: a+x

- name: (present) Post the registration to the API URL
  shell: "
      docker exec -i bitwarden bash -c \"
        /data/admin_registration_command.sh
      \"
    "
  register: ourcompose_bitwarden_admin_post_result
  failed_when:
    - "'error' in ourcompose_bitwarden_admin_post_result['stdout']"
    - "'user already exists' not in ourcompose_bitwarden_admin_post_result['stdout'].lower()"

- name: Remove the local command file
  file:
    dest: "/srv/{{ ourcompose_bitwarden_storage}}/bitwarden_data/admin_registration_command.sh"
    state: absent
