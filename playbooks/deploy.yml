- name: Fact Gathering
  hosts: localhost
  connection: local
  gather_facts: False
  pre_tasks:
    - name: Gather the values for all of the storage variables
      set_fact:
        storage_vars_list:  "{% for i in lookup('varnames', '^compositional_.+_storage', wantlist=True) %}{{ lookup('vars', i) }},{% endfor %}"

- name: Deploy Droplet
  import_playbook: create_droplet.yml

- name: Inventory Management
  hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Add newly-created droplet to new compositional host
      add_host:
        hostname: "{{ hostvars['localhost']['my_droplet']['data']['ip_address'] }}"
        group: 'new'

- name: Establish Connection
  gather_facts: False
  hosts: new
  tasks:
    - name: Add Droplet to DNS while it finishes spinning up
      command: >
        ../bin/cloudns.py 
        --apiuser "{{ cloudns_api_user }}" 
        --apipass "{{ cloudns_api_pass }}" 
        --address "{{ inventory_hostname }}" 
        --type 'add'
      delegate_to: localhost

    - name: Establish an ssh connection once the droplet is ready for it
      wait_for_connection:

- name: Block Storage
  import_playbook: block_storage.yml
  when: "'remote' in hostvars['localhost']['storage_vars_list'].split(',')"

- name: Infrastructure Services
  import_playbook: services.yml
