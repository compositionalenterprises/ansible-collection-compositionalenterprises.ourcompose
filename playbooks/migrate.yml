- name: Migrate
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    delete_droplet_prompt: False

  pre_tasks:
    - name: Gather the values for all of the storage variables
      set_fact:
        storage_vars_list:  "{% for i in lookup('varnames', '^compositional_.+_storage', wantlist=True) %}{{ lookup('vars', i) }},{% endfor %}"
        delete_droplet: "{{ delete_droplet_prompt }}"

- import_playbook: 'create_droplet.yml'

- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Add existing droplet to old group
      add_host:
        name: "{{ groups['compositional'][0] }}"
        groups:
          - 'old'

    - name: Add newly-created droplet to new and compositional groups
      add_host:
        name: "{{ hostvars['localhost']['my_droplet']['data']['ip_address'] }}"
        groups:
          - 'compositional'
          - 'new'

- name: Establish Connection
  gather_facts: False
  hosts: compositional
  tasks:
    - name: Establish an ssh connection
      wait_for_connection:

- import_playbook: 'block_storage.yml'
  when: "'remote' in hostvars['localhost']['storage_vars_list'].split(',')"

- import_playbook: 'mariadb_export.yml'
  when: inventory_hostname in groups['old']
- import_playbook: 'transfer_data.yml'

- import_playbook: 'services.yml'
  when: inventory_hostname in groups['new']

- import_playbook: 'mariadb_export.yml'
  when: inventory_hostname in groups['old']
- import_playbook: 'transfer_data.yml'

- name: Restore the most recently-copied-over database from dump files
  hosts: new
  tasks:
    - name: Determine latest logical mysqldump SQL backup file
      find:
        paths: '/srv/{{ compositional_mariadb_storage | default("local") }}/database_mysql/backups/logical'
        use_regex: yes
        patterns: "^full-backup-(.*)$"
      register: full_backups

    - name: Set fact for most recent mysql backup file
      set_fact:
        latest_full_backup: "{{ full_backups['files'] | map(attribute='path') | map('regex_replace', '^.*\/', '') | list | sort | last }}"

    - name: Load MariaDB Backup
      shell: "
        docker exec -it database bash -c '
          mysql -uroot -p{{ compositional_database_root_password }} --force
            < /var/lib/mysql/backups/logical/{{ latest_full_backup }}'
        "

- import_playbook: 'transfer_ip.yml'
  #- import_playbook: 'delete_droplet.yml'
  #  when: delete_droplet

- name: Update the hosts file with the new droplet's address
  hosts: localhost
  connection: local
  gather_facts: True
  tasks:
    - name: Register realpath of hosts.yml file
      local_action:
        module: shell
        cmd: realpath ../environment/hosts.yml
      register: hosts_realpath

    - name: Replace the old server's IP with the new server's IP in the hosts.yml file
      local_action:
        module: shell
        cmd: ../bin/replace_host.py -i "{{ groups['new'][0] }}" -f "{{ hosts_realpath['stdout'].strip() }}"

    - name: Add the hosts.yml file with the new host present
      local_action:
        module: shell
        cmd: git --git-dir={{ '/'.join(hosts_realpath['stdout'].split('/')[:-1]) }}/.git add hosts.yml
        chdir: ../environment/

    - name: Commit the hosts.yml file with the new host present
      local_action:
        module: shell
        cmd: git --git-dir={{ '/'.join(hosts_realpath['stdout'].split('/')[:-1]) }}/.git commit -m "Updated to new inventory host {{ groups['new'][0] }} on {{ ansible_date_time['date'] }}-{{ ansible_date_time['hour'] }}-{{ ansible_date_time['minute'] }}" hosts.yml
        chdir: ../environment/

    - name: Push that latest commit
      local_action:
        module: shell
        cmd: git --git-dir={{ '/'.join(hosts_realpath['stdout'].split('/')[:-1]) }}/.git push
        chdir: ../environment/
