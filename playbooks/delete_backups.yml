---
- import_playbook: 'minio_setup.yml'

- hosts: all
  vars_files:
    - ../environment/group_vars/all/all.yml
  tasks:
    - name: Install jq
      apt:
        name: jq
        state: latest
        update_cache: True
      register: pkg_install
      retries: 60
      delay: 5
      # Here we're also saying to retry on if we're facing a 'could not get lock'.
      # The second part of the clause after the `or` here is saying:
      #   If the 'msg' is defined (rc != 0), we'll consider the retries complete
      #   if we are unable to find 'Failed...|Could...' in that 'msg'.
      until: pkg_install['msg'] is not defined or (
        pkg_install['msg'] is defined and
        not pkg_install['msg'] | regex_search('Failed to lock apt|Could not get lock'))
      # Finally, we fail if we exit those retries with a 'msg' that does not include
      # the 'Failed...|Changed...' text. Basically, we fail if we are unable to find
      # the acceptable failure reason, and there is some other reason in the 'msg' why
      # we failed. We should troubleshoot that failure manually.
      failed_when:
        - pkg_install['msg'] is defined
        - not pkg_install['msg'] | regex_search('Failed to lock apt|Could not get lock')

    - name: Get all of the bucket names
      shell: "/usr/local/bin/mc --json ls backups/ocbackups | jq '.key' | tr -d '\"' | grep {{ environment_domain | replace('.', '-') }}"
      register: archive_backups_domain_archives
      # We aren't going to have this fail since the very first time there will be no results to grep,
      # which would otherwise lead to a non-zero return code.
      failed_when: False

    - name: Delete any images that need deleting
      command: "mc rm backups/ocbackups/{{ item }}"
      loop: "{{ archive_backups_domain_archives['stdout_lines'] }}"
